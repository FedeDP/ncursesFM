#!/bin/bash
#
# Based on script by z3bra -- 2014-01-21
# taken from vifm
# improved with auto FONTH and FONTW computation
 
W3MIMGDISPLAY="/usr/lib/w3m/w3mimgdisplay"

COMMAND=$1
X=$2
Y=$3
COLUMNS=$4
LINES=$5
TOT_COLS=$6
TOT_LINES=$7
FILENAME="$8"

# read current terminal pixel size
size=$($W3MIMGDISPLAY -test)
var1=$(echo $size | cut -f1 -d' ')
var2=$(echo $size | cut -f2 -d' ')
echo $var1 $var2

# calculate font height and width (float)
FONTW=$(bc -l <<< $var1/$TOT_COLS)
FONTH=$(bc -l <<< $var2/$TOT_LINES)
echo $FONTW $FONTH

# Adjust to pixel dimension
# using printf to round the float multiplication.
# using LC_NUMERIC as output will be n.d (dot separated)
x=$(LC_NUMERIC="en_US.UTF-8" printf "%.0f" $(bc -l <<< $FONTW*$X))
y=$(LC_NUMERIC="en_US.UTF-8" printf "%.0f" $(bc -l <<< $FONTH*$Y))
max_width=$(LC_NUMERIC="en_US.UTF-8" printf "%.0f" $(bc -l <<< $FONTW*$COLUMNS))
max_height=$(LC_NUMERIC="en_US.UTF-8" printf "%.0f" $(bc -l <<< $FONTH*$LINES))
echo $x $y
echo $max_width $max_height

# clear previous image (using +1 otherwise sometimes some small lines would remain)
w=$(LC_NUMERIC="en_US.UTF-8" printf "%.0f" $(bc -l <<< $FONTW*$((COLUMNS + 1))))
h=$(LC_NUMERIC="en_US.UTF-8" printf "%.0f" $(bc -l <<< $FONTH*$((LINES + 1))))
erase="6;$x;$y;$w;$h\n4;\n3;"
echo -e "$erase" | $W3MIMGDISPLAY

# if we only wanted to clear previous image, leave
if [[ $COMMAND -eq 6 ]]; then
    exit 0
fi

# read new image size
read width height <<< `echo "5;$FILENAME" | $W3MIMGDISPLAY`
if [ -z "$width" -o -z "$height" ]; then
    echo 'Error: Failed to obtain image size.'
    exit 1
fi

# scale it then print it
if [ "$width" -gt "$max_width" ]; then
    height=$((height * max_width / width))
    width=$max_width
fi
if [ "$height" -gt "$max_height" ]; then
    width=$((width * max_height / height))
    height=$max_height
fi
 
w3m_command="0;1;$x;$y;$width;$height;;;;;$FILENAME\n4;\n3;"
 
echo -e "$w3m_command" | $W3MIMGDISPLAY
